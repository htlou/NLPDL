[2024-11-15 16:05:19,089] [INFO] [real_accelerator.py:219:get_accelerator] Setting ds_accelerator to cuda (auto detect)
11/15/2024 16:05:19 - INFO - root - /data/align-anything/miniconda3/envs/jy-s/bin/x86_64-conda-linux-gnu-cc -DNDEBUG -fwrapv -O2 -Wall -fPIC -O2 -isystem /data/align-anything/miniconda3/envs/hantao_cham/include -fPIC -O2 -isystem /data/align-anything/miniconda3/envs/hantao_cham/include -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /data/align-anything/miniconda3/envs/jy-s/include -I/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/include -L/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/lib -L/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/lib/stubs -DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /data/align-anything/miniconda3/envs/jy-s/include -I/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/include -L/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/lib -L/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/lib/stubs -fPIC -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /data/align-anything/miniconda3/envs/jy-s/include -I/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/include -L/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/lib -L/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/lib/stubs -c /tmp/tmpme_yw6wd/test.c -o /tmp/tmpme_yw6wd/test.o
11/15/2024 16:05:19 - INFO - root - /data/align-anything/miniconda3/envs/jy-s/bin/x86_64-conda-linux-gnu-cc -Wl,-O2 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,--disable-new-dtags -Wl,--gc-sections -Wl,-rpath,/data/align-anything/miniconda3/envs/jy-s/lib -Wl,-rpath-link,/data/align-anything/miniconda3/envs/jy-s/lib -L/data/align-anything/miniconda3/envs/jy-s/lib -L/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/lib -L/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/lib/stubs /tmp/tmpme_yw6wd/test.o -laio -o /tmp/tmpme_yw6wd/a.out
11/15/2024 16:05:20 - INFO - root - /data/align-anything/miniconda3/envs/jy-s/bin/x86_64-conda-linux-gnu-cc -DNDEBUG -fwrapv -O2 -Wall -fPIC -O2 -isystem /data/align-anything/miniconda3/envs/hantao_cham/include -fPIC -O2 -isystem /data/align-anything/miniconda3/envs/hantao_cham/include -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /data/align-anything/miniconda3/envs/jy-s/include -I/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/include -L/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/lib -L/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/lib/stubs -DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /data/align-anything/miniconda3/envs/jy-s/include -I/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/include -L/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/lib -L/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/lib/stubs -fPIC -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /data/align-anything/miniconda3/envs/jy-s/include -I/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/include -L/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/lib -L/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/lib/stubs -c /tmp/tmph3kqfwuw/test.c -o /tmp/tmph3kqfwuw/test.o
11/15/2024 16:05:20 - INFO - root - /data/align-anything/miniconda3/envs/jy-s/bin/x86_64-conda-linux-gnu-cc -Wl,-O2 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,--disable-new-dtags -Wl,--gc-sections -Wl,-rpath,/data/align-anything/miniconda3/envs/jy-s/lib -Wl,-rpath-link,/data/align-anything/miniconda3/envs/jy-s/lib -L/data/align-anything/miniconda3/envs/jy-s/lib -L/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/lib -L/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/lib/stubs /tmp/tmph3kqfwuw/test.o -L/data/align-anything/miniconda3/envs/hantao_cham -L/data/align-anything/miniconda3/envs/hantao_cham/lib64 -lcufile -o /tmp/tmph3kqfwuw/a.out
[34m[1mwandb[0m: [33mWARNING[0m The `run_name` is currently set to the same value as `TrainingArguments.output_dir`. If this was not intended, please specify a different run name by setting the `TrainingArguments.run_name` parameter.
  0%|                                                                                                                                                                                                                                                                                                     | 0/535 [00:00<?, ?it/s]/data/align-anything/miniconda3/envs/hantao_cham/lib/python3.11/site-packages/torch/nn/parallel/parallel_apply.py:79: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.device(device), torch.cuda.stream(stream), autocast(enabled=autocast_enabled):
/data/align-anything/miniconda3/envs/hantao_cham/lib/python3.11/site-packages/torch/nn/parallel/_functions.py:68: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn('Was asked to gather along dimension 0, but all '
 20%|████████████████████████████████████████████████████████▌                                                                                                                                                                                                                                  | 107/535 [01:04<03:22,  2.11it/s]/data/align-anything/miniconda3/envs/hantao_cham/lib/python3.11/site-packages/torch/nn/parallel/parallel_apply.py:79: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
{'loss': 1.425, 'grad_norm': 4.423385143280029, 'learning_rate': 7.4074074074074075e-06, 'epoch': 0.09}
{'loss': 1.2999, 'grad_norm': 4.413460731506348, 'learning_rate': 1.4814814814814815e-05, 'epoch': 0.19}
{'loss': 1.0849, 'grad_norm': 4.370146751403809, 'learning_rate': 1.988188976377953e-05, 'epoch': 0.28}
{'loss': 0.7635, 'grad_norm': 4.0967326164245605, 'learning_rate': 1.9488188976377956e-05, 'epoch': 0.37}
{'loss': 0.5884, 'grad_norm': 5.848546028137207, 'learning_rate': 1.909448818897638e-05, 'epoch': 0.47}
{'loss': 0.4904, 'grad_norm': 6.040273666381836, 'learning_rate': 1.8700787401574803e-05, 'epoch': 0.56}
{'loss': 0.4293, 'grad_norm': 10.026556968688965, 'learning_rate': 1.830708661417323e-05, 'epoch': 0.65}
{'loss': 0.4237, 'grad_norm': 6.286787986755371, 'learning_rate': 1.7913385826771654e-05, 'epoch': 0.75}
{'loss': 0.3883, 'grad_norm': 4.725152492523193, 'learning_rate': 1.751968503937008e-05, 'epoch': 0.84}
{'loss': 0.3463, 'grad_norm': 5.133184432983398, 'learning_rate': 1.7125984251968505e-05, 'epoch': 0.93}
  with torch.cuda.device(device), torch.cuda.stream(stream), autocast(enabled=autocast_enabled):                                                                                                                                                                                                                                  
{'eval_loss': 0.27065929770469666, 'eval_accuracy': 0.9210526315789473, 'eval_micro_f1': 0.9210526315789473, 'eval_macro_f1': 0.9197765034019431, 'eval_runtime': 9.0482, 'eval_samples_per_second': 83.994, 'eval_steps_per_second': 1.326, 'epoch': 1.0}
/data/align-anything/miniconda3/envs/hantao_cham/lib/python3.11/site-packages/torch/nn/parallel/_functions.py:68: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn('Was asked to gather along dimension 0, but all '
 40%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏                                                                                                                                                                         | 214/535 [02:07<02:26,  2.19it/s]/data/align-anything/miniconda3/envs/hantao_cham/lib/python3.11/site-packages/torch/nn/parallel/parallel_apply.py:79: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
{'loss': 0.3457, 'grad_norm': 3.5078840255737305, 'learning_rate': 1.673228346456693e-05, 'epoch': 1.03}
{'loss': 0.3002, 'grad_norm': 5.712897300720215, 'learning_rate': 1.6338582677165356e-05, 'epoch': 1.12}
{'loss': 0.2671, 'grad_norm': 6.759245872497559, 'learning_rate': 1.5944881889763783e-05, 'epoch': 1.21}
{'loss': 0.3222, 'grad_norm': 4.6283721923828125, 'learning_rate': 1.5551181102362206e-05, 'epoch': 1.31}
{'loss': 0.2935, 'grad_norm': 4.850674152374268, 'learning_rate': 1.5157480314960632e-05, 'epoch': 1.4}
{'loss': 0.2687, 'grad_norm': 6.728952407836914, 'learning_rate': 1.4763779527559057e-05, 'epoch': 1.5}
{'loss': 0.274, 'grad_norm': 6.516861915588379, 'learning_rate': 1.437007874015748e-05, 'epoch': 1.59}
{'loss': 0.2613, 'grad_norm': 3.5496063232421875, 'learning_rate': 1.3976377952755906e-05, 'epoch': 1.68}
{'loss': 0.3166, 'grad_norm': 7.401370048522949, 'learning_rate': 1.3582677165354331e-05, 'epoch': 1.78}
{'loss': 0.3301, 'grad_norm': 6.806362152099609, 'learning_rate': 1.3188976377952758e-05, 'epoch': 1.87}
{'loss': 0.2626, 'grad_norm': 7.003918170928955, 'learning_rate': 1.2795275590551182e-05, 'epoch': 1.96}
  with torch.cuda.device(device), torch.cuda.stream(stream), autocast(enabled=autocast_enabled):                                                                                                                                                                                                                                  
{'eval_loss': 0.23939606547355652, 'eval_accuracy': 0.9236842105263158, 'eval_micro_f1': 0.9236842105263158, 'eval_macro_f1': 0.9226923026748324, 'eval_runtime': 9.1695, 'eval_samples_per_second': 82.883, 'eval_steps_per_second': 1.309, 'epoch': 2.0}
/data/align-anything/miniconda3/envs/hantao_cham/lib/python3.11/site-packages/torch/nn/parallel/_functions.py:68: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn('Was asked to gather along dimension 0, but all '
 60%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊                                                                                                                 | 321/535 [03:14<01:41,  2.10it/s]/data/align-anything/miniconda3/envs/hantao_cham/lib/python3.11/site-packages/torch/nn/parallel/parallel_apply.py:79: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
{'loss': 0.1863, 'grad_norm': 3.002882719039917, 'learning_rate': 1.2401574803149607e-05, 'epoch': 2.06}
{'loss': 0.1738, 'grad_norm': 4.751149654388428, 'learning_rate': 1.2007874015748033e-05, 'epoch': 2.15}
{'loss': 0.2094, 'grad_norm': 6.56411600112915, 'learning_rate': 1.1614173228346456e-05, 'epoch': 2.24}
{'loss': 0.2033, 'grad_norm': 4.179162979125977, 'learning_rate': 1.1220472440944883e-05, 'epoch': 2.34}
{'loss': 0.203, 'grad_norm': 5.344182014465332, 'learning_rate': 1.0826771653543309e-05, 'epoch': 2.43}
{'loss': 0.1943, 'grad_norm': 6.027821063995361, 'learning_rate': 1.0433070866141732e-05, 'epoch': 2.52}
{'loss': 0.183, 'grad_norm': 5.079874038696289, 'learning_rate': 1.0039370078740158e-05, 'epoch': 2.62}
{'loss': 0.1766, 'grad_norm': 4.070139408111572, 'learning_rate': 9.645669291338583e-06, 'epoch': 2.71}
{'loss': 0.1688, 'grad_norm': 6.400442600250244, 'learning_rate': 9.251968503937008e-06, 'epoch': 2.8}
{'loss': 0.1647, 'grad_norm': 3.4933888912200928, 'learning_rate': 8.858267716535434e-06, 'epoch': 2.9}
{'loss': 0.1911, 'grad_norm': 3.900362968444824, 'learning_rate': 8.46456692913386e-06, 'epoch': 2.99}
  with torch.cuda.device(device), torch.cuda.stream(stream), autocast(enabled=autocast_enabled):                                                                                                                                                                                                                                  
{'eval_loss': 0.24174290895462036, 'eval_accuracy': 0.9223684210526316, 'eval_micro_f1': 0.9223684210526316, 'eval_macro_f1': 0.9214953144181254, 'eval_runtime': 10.5241, 'eval_samples_per_second': 72.215, 'eval_steps_per_second': 1.14, 'epoch': 3.0}
/data/align-anything/miniconda3/envs/hantao_cham/lib/python3.11/site-packages/torch/nn/parallel/_functions.py:68: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn('Was asked to gather along dimension 0, but all '
 80%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍                                                        | 428/535 [04:22<00:49,  2.16it/s]/data/align-anything/miniconda3/envs/hantao_cham/lib/python3.11/site-packages/torch/nn/parallel/parallel_apply.py:79: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
{'loss': 0.173, 'grad_norm': 2.987349271774292, 'learning_rate': 8.070866141732285e-06, 'epoch': 3.08}
{'loss': 0.1321, 'grad_norm': 4.545032501220703, 'learning_rate': 7.677165354330708e-06, 'epoch': 3.18}
{'loss': 0.1053, 'grad_norm': 1.9837532043457031, 'learning_rate': 7.283464566929135e-06, 'epoch': 3.27}
{'loss': 0.1673, 'grad_norm': 6.906832695007324, 'learning_rate': 6.88976377952756e-06, 'epoch': 3.36}
{'loss': 0.0955, 'grad_norm': 2.6527063846588135, 'learning_rate': 6.496062992125984e-06, 'epoch': 3.46}
{'loss': 0.1117, 'grad_norm': 2.6660642623901367, 'learning_rate': 6.1023622047244104e-06, 'epoch': 3.55}
{'loss': 0.1087, 'grad_norm': 5.928342819213867, 'learning_rate': 5.708661417322835e-06, 'epoch': 3.64}
{'loss': 0.1331, 'grad_norm': 6.8349928855896, 'learning_rate': 5.314960629921261e-06, 'epoch': 3.74}
{'loss': 0.1561, 'grad_norm': 5.585270404815674, 'learning_rate': 4.921259842519686e-06, 'epoch': 3.83}
{'loss': 0.1267, 'grad_norm': 3.6400256156921387, 'learning_rate': 4.52755905511811e-06, 'epoch': 3.93}
  with torch.cuda.device(device), torch.cuda.stream(stream), autocast(enabled=autocast_enabled):                                                                                                                                                                                                                                  
{'eval_loss': 0.24362768232822418, 'eval_accuracy': 0.9236842105263158, 'eval_micro_f1': 0.9236842105263158, 'eval_macro_f1': 0.9224469358888547, 'eval_runtime': 14.8458, 'eval_samples_per_second': 51.193, 'eval_steps_per_second': 0.808, 'epoch': 4.0}
/data/align-anything/miniconda3/envs/hantao_cham/lib/python3.11/site-packages/torch/nn/parallel/_functions.py:68: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn('Was asked to gather along dimension 0, but all '
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 535/535 [05:17<00:00,  2.15it/s]/data/align-anything/miniconda3/envs/hantao_cham/lib/python3.11/site-packages/torch/nn/parallel/parallel_apply.py:79: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
{'loss': 0.1465, 'grad_norm': 3.4187607765197754, 'learning_rate': 4.1338582677165355e-06, 'epoch': 4.02}
{'loss': 0.0913, 'grad_norm': 5.198500633239746, 'learning_rate': 3.740157480314961e-06, 'epoch': 4.11}
{'loss': 0.0984, 'grad_norm': 3.8099608421325684, 'learning_rate': 3.346456692913386e-06, 'epoch': 4.21}
{'loss': 0.0784, 'grad_norm': 6.359652042388916, 'learning_rate': 2.952755905511811e-06, 'epoch': 4.3}
{'loss': 0.0834, 'grad_norm': 3.0612380504608154, 'learning_rate': 2.5590551181102365e-06, 'epoch': 4.39}
{'loss': 0.1265, 'grad_norm': 3.3876771926879883, 'learning_rate': 2.165354330708662e-06, 'epoch': 4.49}
{'loss': 0.091, 'grad_norm': 4.245430946350098, 'learning_rate': 1.7716535433070868e-06, 'epoch': 4.58}
{'loss': 0.0832, 'grad_norm': 7.804612159729004, 'learning_rate': 1.377952755905512e-06, 'epoch': 4.67}
{'loss': 0.1163, 'grad_norm': 3.9006447792053223, 'learning_rate': 9.84251968503937e-07, 'epoch': 4.77}
{'loss': 0.0854, 'grad_norm': 1.555008888244629, 'learning_rate': 5.905511811023623e-07, 'epoch': 4.86}
{'loss': 0.0984, 'grad_norm': 3.948075294494629, 'learning_rate': 1.968503937007874e-07, 'epoch': 4.95}
  with torch.cuda.device(device), torch.cuda.stream(stream), autocast(enabled=autocast_enabled):
/data/align-anything/miniconda3/envs/hantao_cham/lib/python3.11/site-packages/torch/nn/parallel/_functions.py:68: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn('Was asked to gather along dimension 0, but all '
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 535/535 [05:34<00:00,  1.60it/s]
/data/align-anything/miniconda3/envs/hantao_cham/lib/python3.11/site-packages/torch/nn/parallel/parallel_apply.py:79: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.                                                                                  
{'eval_loss': 0.25458353757858276, 'eval_accuracy': 0.9210526315789473, 'eval_micro_f1': 0.9210526315789473, 'eval_macro_f1': 0.9198685912649162, 'eval_runtime': 9.3151, 'eval_samples_per_second': 81.588, 'eval_steps_per_second': 1.288, 'epoch': 5.0}
{'train_runtime': 335.2131, 'train_samples_per_second': 102.025, 'train_steps_per_second': 1.596, 'train_loss': 0.2805075696695631, 'epoch': 5.0}
  with torch.cuda.device(device), torch.cuda.stream(stream), autocast(enabled=autocast_enabled):
/data/align-anything/miniconda3/envs/hantao_cham/lib/python3.11/site-packages/torch/nn/parallel/_functions.py:68: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn('Was asked to gather along dimension 0, but all '
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 12/12 [00:08<00:00,  1.43it/s]
***** eval metrics *****
  epoch                   =        5.0
  eval_accuracy           =     0.9237
  eval_loss               =     0.2394
  eval_macro_f1           =     0.9227
  eval_micro_f1           =     0.9237
  eval_runtime            = 0:00:08.51
  eval_samples_per_second =     89.232
  eval_steps_per_second   =      1.409
