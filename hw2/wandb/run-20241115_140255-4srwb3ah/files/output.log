[2024-11-15 14:02:58,660] [INFO] [real_accelerator.py:219:get_accelerator] Setting ds_accelerator to cuda (auto detect)
11/15/2024 14:02:59 - INFO - root - /data/align-anything/miniconda3/envs/jy-s/bin/x86_64-conda-linux-gnu-cc -DNDEBUG -fwrapv -O2 -Wall -fPIC -O2 -isystem /data/align-anything/miniconda3/envs/hantao_cham/include -fPIC -O2 -isystem /data/align-anything/miniconda3/envs/hantao_cham/include -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /data/align-anything/miniconda3/envs/jy-s/include -I/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/include -L/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/lib -L/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/lib/stubs -DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /data/align-anything/miniconda3/envs/jy-s/include -I/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/include -L/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/lib -L/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/lib/stubs -fPIC -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /data/align-anything/miniconda3/envs/jy-s/include -I/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/include -L/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/lib -L/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/lib/stubs -c /tmp/tmpibc8qcah/test.c -o /tmp/tmpibc8qcah/test.o
11/15/2024 14:02:59 - INFO - root - /data/align-anything/miniconda3/envs/jy-s/bin/x86_64-conda-linux-gnu-cc -Wl,-O2 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,--disable-new-dtags -Wl,--gc-sections -Wl,-rpath,/data/align-anything/miniconda3/envs/jy-s/lib -Wl,-rpath-link,/data/align-anything/miniconda3/envs/jy-s/lib -L/data/align-anything/miniconda3/envs/jy-s/lib -L/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/lib -L/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/lib/stubs /tmp/tmpibc8qcah/test.o -laio -o /tmp/tmpibc8qcah/a.out
11/15/2024 14:02:59 - INFO - root - /data/align-anything/miniconda3/envs/jy-s/bin/x86_64-conda-linux-gnu-cc -DNDEBUG -fwrapv -O2 -Wall -fPIC -O2 -isystem /data/align-anything/miniconda3/envs/hantao_cham/include -fPIC -O2 -isystem /data/align-anything/miniconda3/envs/hantao_cham/include -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /data/align-anything/miniconda3/envs/jy-s/include -I/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/include -L/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/lib -L/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/lib/stubs -DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /data/align-anything/miniconda3/envs/jy-s/include -I/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/include -L/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/lib -L/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/lib/stubs -fPIC -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /data/align-anything/miniconda3/envs/jy-s/include -I/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/include -L/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/lib -L/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/lib/stubs -c /tmp/tmp17y2_3z_/test.c -o /tmp/tmp17y2_3z_/test.o
11/15/2024 14:02:59 - INFO - root - /data/align-anything/miniconda3/envs/jy-s/bin/x86_64-conda-linux-gnu-cc -Wl,-O2 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,--disable-new-dtags -Wl,--gc-sections -Wl,-rpath,/data/align-anything/miniconda3/envs/jy-s/lib -Wl,-rpath-link,/data/align-anything/miniconda3/envs/jy-s/lib -L/data/align-anything/miniconda3/envs/jy-s/lib -L/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/lib -L/data/align-anything/miniconda3/envs/jy-s/targets/x86_64-linux/lib/stubs /tmp/tmp17y2_3z_/test.o -L/data/align-anything/miniconda3/envs/hantao_cham -L/data/align-anything/miniconda3/envs/hantao_cham/lib64 -lcufile -o /tmp/tmp17y2_3z_/a.out
[34m[1mwandb[0m: [33mWARNING[0m The `run_name` is currently set to the same value as `TrainingArguments.output_dir`. If this was not intended, please specify a different run name by setting the `TrainingArguments.run_name` parameter.
  0%|                                                                                                                                                                                                                                                                                                     | 0/535 [00:00<?, ?it/s]/data/align-anything/miniconda3/envs/hantao_cham/lib/python3.11/site-packages/torch/nn/parallel/parallel_apply.py:79: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.device(device), torch.cuda.stream(stream), autocast(enabled=autocast_enabled):
/data/align-anything/miniconda3/envs/hantao_cham/lib/python3.11/site-packages/torch/nn/parallel/_functions.py:68: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn('Was asked to gather along dimension 0, but all '
 20%|████████████████████████████████████████████████████████▌                                                                                                                                                                                                                                  | 107/535 [01:00<02:49,  2.52it/s]/data/align-anything/miniconda3/envs/hantao_cham/lib/python3.11/site-packages/torch/nn/parallel/parallel_apply.py:79: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
{'loss': 1.3983, 'grad_norm': 3.3454389572143555, 'learning_rate': 7.4074074074074075e-06, 'epoch': 0.09}
{'loss': 1.3803, 'grad_norm': 2.0913596153259277, 'learning_rate': 1.4814814814814815e-05, 'epoch': 0.19}
{'loss': 1.3266, 'grad_norm': 2.74334979057312, 'learning_rate': 1.988188976377953e-05, 'epoch': 0.28}
{'loss': 0.8582, 'grad_norm': 4.777684211730957, 'learning_rate': 1.9488188976377956e-05, 'epoch': 0.37}
{'loss': 0.4834, 'grad_norm': 9.694464683532715, 'learning_rate': 1.909448818897638e-05, 'epoch': 0.47}
{'loss': 0.3922, 'grad_norm': 11.071624755859375, 'learning_rate': 1.8700787401574803e-05, 'epoch': 0.56}
{'loss': 0.3496, 'grad_norm': 9.626976013183594, 'learning_rate': 1.830708661417323e-05, 'epoch': 0.65}
{'loss': 0.3632, 'grad_norm': 7.9301300048828125, 'learning_rate': 1.7913385826771654e-05, 'epoch': 0.75}
{'loss': 0.3289, 'grad_norm': 4.226382732391357, 'learning_rate': 1.751968503937008e-05, 'epoch': 0.84}
{'loss': 0.2881, 'grad_norm': 3.7718687057495117, 'learning_rate': 1.7125984251968505e-05, 'epoch': 0.93}
  with torch.cuda.device(device), torch.cuda.stream(stream), autocast(enabled=autocast_enabled):                                                                                                                                                                                                                                  
{'eval_loss': 0.25829070806503296, 'eval_accuracy': 0.9197368421052632, 'eval_micro_f1': 0.9197368421052632, 'eval_macro_f1': 0.918106403519985, 'eval_runtime': 7.9417, 'eval_samples_per_second': 95.697, 'eval_steps_per_second': 1.511, 'epoch': 1.0}
/data/align-anything/miniconda3/envs/hantao_cham/lib/python3.11/site-packages/torch/nn/parallel/_functions.py:68: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn('Was asked to gather along dimension 0, but all '
 40%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏                                                                                                                                                                         | 214/535 [02:05<02:31,  2.11it/s]/data/align-anything/miniconda3/envs/hantao_cham/lib/python3.11/site-packages/torch/nn/parallel/parallel_apply.py:79: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
{'loss': 0.3238, 'grad_norm': 5.4530744552612305, 'learning_rate': 1.673228346456693e-05, 'epoch': 1.03}
{'loss': 0.2623, 'grad_norm': 9.377327919006348, 'learning_rate': 1.6338582677165356e-05, 'epoch': 1.12}
{'loss': 0.235, 'grad_norm': 4.2664475440979, 'learning_rate': 1.5944881889763783e-05, 'epoch': 1.21}
{'loss': 0.3034, 'grad_norm': 10.399649620056152, 'learning_rate': 1.5551181102362206e-05, 'epoch': 1.31}
{'loss': 0.2362, 'grad_norm': 3.9442250728607178, 'learning_rate': 1.5157480314960632e-05, 'epoch': 1.4}
{'loss': 0.2712, 'grad_norm': 6.1697096824646, 'learning_rate': 1.4763779527559057e-05, 'epoch': 1.5}
{'loss': 0.2099, 'grad_norm': 7.492187976837158, 'learning_rate': 1.437007874015748e-05, 'epoch': 1.59}
{'loss': 0.2528, 'grad_norm': 3.537973165512085, 'learning_rate': 1.3976377952755906e-05, 'epoch': 1.68}
{'loss': 0.2581, 'grad_norm': 5.023830413818359, 'learning_rate': 1.3582677165354331e-05, 'epoch': 1.78}
{'loss': 0.2648, 'grad_norm': 5.278939247131348, 'learning_rate': 1.3188976377952758e-05, 'epoch': 1.87}
{'loss': 0.2179, 'grad_norm': 5.144741058349609, 'learning_rate': 1.2795275590551182e-05, 'epoch': 1.96}
  with torch.cuda.device(device), torch.cuda.stream(stream), autocast(enabled=autocast_enabled):                                                                                                                                                                                                                                  
{'eval_loss': 0.22743183374404907, 'eval_accuracy': 0.9236842105263158, 'eval_micro_f1': 0.9236842105263158, 'eval_macro_f1': 0.922169626554889, 'eval_runtime': 9.1619, 'eval_samples_per_second': 82.952, 'eval_steps_per_second': 1.31, 'epoch': 2.0}
/data/align-anything/miniconda3/envs/hantao_cham/lib/python3.11/site-packages/torch/nn/parallel/_functions.py:68: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn('Was asked to gather along dimension 0, but all '
 60%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊                                                                                                                 | 321/535 [03:09<01:40,  2.14it/s]/data/align-anything/miniconda3/envs/hantao_cham/lib/python3.11/site-packages/torch/nn/parallel/parallel_apply.py:79: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
{'loss': 0.1888, 'grad_norm': 3.5499160289764404, 'learning_rate': 1.2401574803149607e-05, 'epoch': 2.06}
{'loss': 0.1612, 'grad_norm': 3.8613929748535156, 'learning_rate': 1.2007874015748033e-05, 'epoch': 2.15}
{'loss': 0.1569, 'grad_norm': 7.859364032745361, 'learning_rate': 1.1614173228346456e-05, 'epoch': 2.24}
{'loss': 0.192, 'grad_norm': 3.2032554149627686, 'learning_rate': 1.1220472440944883e-05, 'epoch': 2.34}
{'loss': 0.1871, 'grad_norm': 8.473344802856445, 'learning_rate': 1.0826771653543309e-05, 'epoch': 2.43}
{'loss': 0.2091, 'grad_norm': 15.691747665405273, 'learning_rate': 1.0433070866141732e-05, 'epoch': 2.52}
{'loss': 0.1711, 'grad_norm': 4.093917369842529, 'learning_rate': 1.0039370078740158e-05, 'epoch': 2.62}
{'loss': 0.1858, 'grad_norm': 5.73835563659668, 'learning_rate': 9.645669291338583e-06, 'epoch': 2.71}
{'loss': 0.1647, 'grad_norm': 8.490859985351562, 'learning_rate': 9.251968503937008e-06, 'epoch': 2.8}
{'loss': 0.1679, 'grad_norm': 3.827605724334717, 'learning_rate': 8.858267716535434e-06, 'epoch': 2.9}
{'loss': 0.2029, 'grad_norm': 3.8639414310455322, 'learning_rate': 8.46456692913386e-06, 'epoch': 2.99}
  with torch.cuda.device(device), torch.cuda.stream(stream), autocast(enabled=autocast_enabled):                                                                                                                                                                                                                                  
{'eval_loss': 0.2281465232372284, 'eval_accuracy': 0.925, 'eval_micro_f1': 0.925, 'eval_macro_f1': 0.9233949101123048, 'eval_runtime': 9.3833, 'eval_samples_per_second': 80.995, 'eval_steps_per_second': 1.279, 'epoch': 3.0}
/data/align-anything/miniconda3/envs/hantao_cham/lib/python3.11/site-packages/torch/nn/parallel/_functions.py:68: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn('Was asked to gather along dimension 0, but all '
 80%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍                                                        | 428/535 [04:25<00:58,  1.82it/s]/data/align-anything/miniconda3/envs/hantao_cham/lib/python3.11/site-packages/torch/nn/parallel/parallel_apply.py:79: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
{'loss': 0.1645, 'grad_norm': 5.2257161140441895, 'learning_rate': 8.070866141732285e-06, 'epoch': 3.08}
{'loss': 0.1259, 'grad_norm': 4.569383144378662, 'learning_rate': 7.677165354330708e-06, 'epoch': 3.18}
{'loss': 0.1122, 'grad_norm': 3.1977288722991943, 'learning_rate': 7.283464566929135e-06, 'epoch': 3.27}
{'loss': 0.1836, 'grad_norm': 15.867286682128906, 'learning_rate': 6.88976377952756e-06, 'epoch': 3.36}
{'loss': 0.1162, 'grad_norm': 4.8712873458862305, 'learning_rate': 6.496062992125984e-06, 'epoch': 3.46}
{'loss': 0.1059, 'grad_norm': 7.225300312042236, 'learning_rate': 6.1023622047244104e-06, 'epoch': 3.55}
{'loss': 0.1246, 'grad_norm': 4.267895698547363, 'learning_rate': 5.708661417322835e-06, 'epoch': 3.64}
{'loss': 0.0991, 'grad_norm': 5.64786434173584, 'learning_rate': 5.314960629921261e-06, 'epoch': 3.74}
{'loss': 0.1062, 'grad_norm': 6.999200820922852, 'learning_rate': 4.921259842519686e-06, 'epoch': 3.83}
{'loss': 0.1378, 'grad_norm': 6.787558555603027, 'learning_rate': 4.52755905511811e-06, 'epoch': 3.93}
  with torch.cuda.device(device), torch.cuda.stream(stream), autocast(enabled=autocast_enabled):                                                                                                                                                                                                                                  
{'eval_loss': 0.2136940360069275, 'eval_accuracy': 0.9236842105263158, 'eval_micro_f1': 0.9236842105263158, 'eval_macro_f1': 0.9218889683683245, 'eval_runtime': 8.7631, 'eval_samples_per_second': 86.728, 'eval_steps_per_second': 1.369, 'epoch': 4.0}
/data/align-anything/miniconda3/envs/hantao_cham/lib/python3.11/site-packages/torch/nn/parallel/_functions.py:68: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn('Was asked to gather along dimension 0, but all '
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 535/535 [05:29<00:00,  1.91it/s]/data/align-anything/miniconda3/envs/hantao_cham/lib/python3.11/site-packages/torch/nn/parallel/parallel_apply.py:79: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
{'loss': 0.1293, 'grad_norm': 1.7727354764938354, 'learning_rate': 4.1338582677165355e-06, 'epoch': 4.02}
{'loss': 0.0964, 'grad_norm': 8.70411491394043, 'learning_rate': 3.740157480314961e-06, 'epoch': 4.11}
{'loss': 0.0845, 'grad_norm': 4.161725997924805, 'learning_rate': 3.346456692913386e-06, 'epoch': 4.21}
{'loss': 0.0947, 'grad_norm': 6.370490550994873, 'learning_rate': 2.952755905511811e-06, 'epoch': 4.3}
{'loss': 0.082, 'grad_norm': 7.933560371398926, 'learning_rate': 2.5590551181102365e-06, 'epoch': 4.39}
{'loss': 0.1225, 'grad_norm': 10.941390037536621, 'learning_rate': 2.165354330708662e-06, 'epoch': 4.49}
{'loss': 0.0758, 'grad_norm': 2.276862382888794, 'learning_rate': 1.7716535433070868e-06, 'epoch': 4.58}
{'loss': 0.0697, 'grad_norm': 6.000108242034912, 'learning_rate': 1.377952755905512e-06, 'epoch': 4.67}
{'loss': 0.1192, 'grad_norm': 6.643680572509766, 'learning_rate': 9.84251968503937e-07, 'epoch': 4.77}
{'loss': 0.1004, 'grad_norm': 0.7431172728538513, 'learning_rate': 5.905511811023623e-07, 'epoch': 4.86}
{'loss': 0.0834, 'grad_norm': 5.105170726776123, 'learning_rate': 1.968503937007874e-07, 'epoch': 4.95}
  with torch.cuda.device(device), torch.cuda.stream(stream), autocast(enabled=autocast_enabled):
/data/align-anything/miniconda3/envs/hantao_cham/lib/python3.11/site-packages/torch/nn/parallel/_functions.py:68: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn('Was asked to gather along dimension 0, but all '
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 535/535 [05:52<00:00,  1.52it/s]
/data/align-anything/miniconda3/envs/hantao_cham/lib/python3.11/site-packages/torch/nn/parallel/parallel_apply.py:79: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.                                                                                  
{'eval_loss': 0.22572319209575653, 'eval_accuracy': 0.9263157894736842, 'eval_micro_f1': 0.9263157894736842, 'eval_macro_f1': 0.9245176513000422, 'eval_runtime': 13.9032, 'eval_samples_per_second': 54.664, 'eval_steps_per_second': 0.863, 'epoch': 5.0}
{'train_runtime': 353.3426, 'train_samples_per_second': 96.79, 'train_steps_per_second': 1.514, 'train_loss': 0.26895221326952784, 'epoch': 5.0}
  with torch.cuda.device(device), torch.cuda.stream(stream), autocast(enabled=autocast_enabled):
/data/align-anything/miniconda3/envs/hantao_cham/lib/python3.11/site-packages/torch/nn/parallel/_functions.py:68: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn('Was asked to gather along dimension 0, but all '
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 12/12 [00:07<00:00,  1.55it/s]
***** eval metrics *****
  epoch                   =        5.0
  eval_accuracy           =     0.9263
  eval_loss               =     0.2257
  eval_macro_f1           =     0.9245
  eval_micro_f1           =     0.9263
  eval_runtime            = 0:00:08.05
  eval_samples_per_second =     94.372
  eval_steps_per_second   =       1.49
